Need of method : 

A piece of code that needs to be executed many times in a program.A procedure, which allows you to extract the common code to one place. In Ruby, we call it a method.

Benefit of method:

Methods give us is the ability to make changes in one place that affect many places in our program. 

-----------------------
SYNTAX

def method_name(parameters)
  # method body goes here
end

----------------------
EXAMPLE

def say(words)			#method definition
  puts words
end

say("hello")			#method invocation
say("hi")			#here "hi" is argument
say("how are you")
say("I'm fine")
=======
 ruby prog.rb
hello
hi
how are you
I'm fine

-----------------------
-> Parameters are used when you have data outside of a method definition's scope, but you need access to it within the method definition. If the method definition does not need access to any outside data, you do not need to define any parameters.

-> Method invocation to refer to calling a method.

->  Arguments are pieces of information that are sent to a method invocation to be modified or used to return a specific result. We "pass" arguments to a method when we call it.

-> Local variables within a method definition cannot be referenced from outside of the method definition. It's also the reason why local variables within a method definition cannot access data outside of the method definition (unless the data is passed in as a parameter).
 eg-
	a = 5

	def some_method
	  a = 3
	end

	puts a

->In Ruby, every method returns the evaluated result of the last line that is executed.
---------------------
Methods as Arguments

def greeting(name)
"hello " + name + " welcome"
end

puts greeting("madhu")
========
hello madhu welcome

---------------------
def multiply(x,y)
x*y
end

puts multiply 4,5
======
20

--------------------
def scream(words)
  words = words + "!!!!"
  return
  puts words
end

scream("Yippeee")
======
no output is printed
#because return keyword is returning no value
#and after return the lines below it are not executed

---------------------

